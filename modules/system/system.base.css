/*$Id: system.base.css,v 1.4 2011/01/03 07:04:48 webchick Exp $
*
* @file
* Generic theme-independent base styles.
 
*
* Autocomplete.
*
* @see autocomplete.js
 
Suggestion list*/
#autocomplete
{
	border: 1px solid #000000;
	overflow: hidden;
	position: absolute;
	z-index: 100;
}
#autocomplete UL
{
	list-style: none;
	list-style-image: none;
	margin: 0;
	padding: 0;
}
#autocomplete LI
{
	background: #FFF;
	color: #000;
	cursor: default;
	white-space: pre;
}
/*Animated throbber*/
HTML.js INPUT.form-autocomplete
{
	background-image: url(../../misc/throbber.gif);
	background-position: 100% 2px;
/*LTR*/
	background-repeat: no-repeat;
}
HTML.js INPUT.throbbing
{
	background-position: 100% -18px;
/*LTR*/
}
/**
* Collapsible fieldsets.
*
* @see collapse.js
 */
HTML.js FIELDSET.collapsed
{
	border-bottom-width: 0;
	border-left-width: 0;
	border-right-width: 0;
	height: 1em;
}
HTML.js FIELDSET.collapsed .fieldset-wrapper
{
	display: none;
}
FIELDSET.collapsible
{
	position: relative;
}
FIELDSET.collapsible .fieldset-legend
{
	display: block;
}
/**
* Resizable textareas.
*
* @see textarea.js
 */
.form-textarea-wrapper TEXTAREA
{
	display: block;
	margin: 0;
	width: 100%;
	-moz-box-sizing: border-box;
	-webkit-box-sizing: border-box;
	box-sizing: border-box;
}
.resizable-textarea .grippie
{
	background: #EEE url(../../misc/grippie.png) no-repeat center 2px;
	border: 1px solid #DDD;
	border-top-width: 0;
	cursor: s-resize;
	height: 9px;
	overflow: hidden;
}
/**
* TableDrag behavior.
*
* @see tabledrag.js
 */
BODY.drag
{
	cursor: move;
}
.draggable A.tabledrag-handle
{
	cursor: move;
	float: left;
/*LTR*/
	height: 1.7em;
	margin: -0.4em 0 -0.4em -0.5em;
/*LTR*/
	padding: 0.42em 1.5em 0.42em 0.5em;
/*LTR*/
	text-decoration: none;
}
A.tabledrag-handle:hover
{
	text-decoration: none;
}
A.tabledrag-handle .handle
{
	background: url(../../misc/draggable.png) no-repeat 0 0;
	height: 13px;
	margin-top: 4px;
	width: 13px;
}
A.tabledrag-handle-hover .handle
{
	background-position: 0 -20px;
}
DIV.indentation
{
	float: left;
/*LTR*/
	height: 1.7em;
	margin: -0.4em 0.2em -0.4em -0.4em;
/*LTR*/
	padding: 0.42em 0 0.42em 0.6em;
/*LTR*/
	width: 20px;
}
DIV.tree-child
{
	background: url(../../misc/tree.png) no-repeat 11px center;
/*LTR*/
}
DIV.tree-child-last
{
	background: url(../../misc/tree-bottom.png) no-repeat 11px center;
/*LTR*/
}
DIV.tree-child-horizontal
{
	background: url(../../misc/tree.png) no-repeat -11px center;
}
.tabledrag-toggle-weight-wrapper
{
	text-align: right;
/*LTR*/
}
/**
* TableHeader behavior.
*
* @see tableheader.js
 */
TABLE.sticky-header
{
	background-color: #FFF;
	margin-top: 0;
}
/**
* Progress behavior.
*
* @see progress.js
 
Bar*/
.progress .bar
{
	background-color: #FFF;
	border: 1px solid #000000;
}
.progress .filled
{
	background-color: #000;
	height: 1.5em;
	width: 5px;
}
.progress .percentage
{
	float: right;
/*LTR*/
}
.progress-disabled
{
	float: left;
/*LTR*/
}
/*Throbber*/
.ajax-progress
{
	float: left;
/*LTR*/
}
.ajax-progress .throbber
{
	background: transparent url(../../misc/throbber.gif) no-repeat 0px -18px;
	float: left;
/*LTR*/
	height: 15px;
	margin: 2px;
	width: 15px;
}
TR .ajax-progress .throbber
{
	margin: 0 2px;
}
.ajax-progress-bar
{
	width: 16em;
}
/**
* Inline items.
 */
.container-inline DIV, .container-inline LABEL
{
	display: inline;
}
/*Fieldset contents always need to be rendered as block.*/
.container-inline .fieldset-wrapper
{
	display: block;
}
/**
* Prevent text wrapping.
 */
.nowrap
{
	white-space: nowrap;
}
/**
* For anything you want to hide on page load when JS is enabled, so
* that you can use the JS to control visibility and avoid flicker.
 */
HTML.js .js-hide
{
	display: none;
}
/**
* Hide elements from all users.
*
* Used for elements which should not be immediately displayed to any user. An
* example would be a collapsible fieldset that will be expanded with a click
* from a user. The effect of this class can be toggled with the jQuery show()
* and hide() functions.
 */
.element-hidden
{
	display: none;
}
/**
* Hide elements visually, but keep them available for screen-readers.
*
* Used for information required for screen-reader users to understand and use
* the site where visual display is undesirable. Information provided in this
* manner should be kept concise, to avoid unnecessary burden on the user.
* "!important" is used to prevent unintentional overrides.
 */
.element-invisible
{
	position: absolute !important;
	clip: rect(1px, 1px, 1px, 1px);
/*IE6, IE7*/
	clip: rect(1px, 1px, 1px, 1px);
}
/**
* The .element-focusable class extends the .element-invisible class to allow
* the element to be focusable when navigated to via the keyboard.
 */
.element-invisible.element-focusable:active, .element-invisible.element-focusable:focus
{
	position: static !important;
	clip: rect(auto auto auto auto);
}
/**
* Markup free clearing.
*
* @see http://perishablepress.com/press/2009/12/06/new-clearfix-hack
 */
.clearfix:after
{
	content: ".";
	display: block;
	height: 0;
	clear: both;
	visibility: hidden;
}
/*IE6*/
* HTML .clearfix
{
	height: 1%;
}
/*IE7*/
*:first-child+HTML .clearfix
{
	min-height: 1%;
}
